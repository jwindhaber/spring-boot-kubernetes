# Default values for sample.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: spring-boot-simple-web-postgres
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

web:
  port: 8080
  datasource:
    url:
    username:
    ##SHOULD COME FROM A SECRET
    password:
  env:
    java:
      timezone: "-Duser.timezone=Europe/Zurich"
      javaOpts:
    spring:
      activeMqInMemory: true
      activeMqEmbedded: true

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    ingress.kubernetes.io/hsts: "true"
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: localhost
      paths: [/]
  tls:
    - secretName: web-tls-secret
      hosts:
        - localhost

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
#   cpu: 100m
#   memory: 128Mi

## At the moment autoscaling easytax is not supported but will be in the future

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

## Configuration values for the postgresql dependency.
## Ref: https://github.com/helm/charts/blob/master/stable/postgresql/README.md
##
postgresql:

  image:
    debug: true

#  initdbScriptsConfigMap: configmap-postgres-init-scripts

  ## initdbScripts:
  ##  setup.sql: |
  ##   CREATE TABLE instr_event_priority_fn (instr_event_priority_id VARCHAR(140), revision_id NUMERIC(19), CONSTRAINT pk_instr_event_priority_fn PRIMARY KEY (instr_event_priority_id));

  ## Use the PostgreSQL chart dependency.
  ##
  ## Set to false if bringing your own PostgreSQL, and set the corresponding `secrets`
  ## fields that correspond to the PostgreSQL variables that `concourse web` should use
  ## to connect to.
  ##
  ## Should be set to false if using the chart as a worker only deployment.
  ##
  enabled: true

  ## Provide a name to substitute for the full name of postgresql resources
  ## ps.: Resources will not be appended with "-postgresql"
  ##
  fullnameOverride:

  ### PostgreSQL User to create.
  ##
  postgresqlUsername: sample

  ## PostgreSQL Password for the new user.
  ## If not set, a random 10 characters password will be used.
  ##
  postgresqlPassword: sample

  ## PostgreSQL Database to create.
  ##
  postgresqlDatabase: sample

  ## Allows for setting a specific cluster ip for the PostgreSQL
  ## service.
  service:
    clusterIP: None

  ## Persistent Volume Storage configuration for PostgreSQL.
  ##
  ## Ref: https://kubernetes.io/docs/user-guide/persistent-volumes
  ##
  persistence:
    ## Enable PostgreSQL persistence using Persistent Volume Claims.
    ##
    enabled: true

    ## Persistent Volume Storage Class to be used by PersistentVolumes created
    ## for PostgreSQL.
    ##
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass:

    ## Persistent Volume Access Mode.
    ##
    accessModes:
      - ReadWriteOnce

    ## Persistent Volume Storage Size.
    ##
    size: 8Gi

## For managing secrets using Helm
##
secrets:
  ## Create the secret resource from the following values. Set this to
  ## false to manage these secrets outside Helm.
  ##
  create: true

  ## The TLS certificate and private key for the web component to be able to terminate TLS connections.
  ## This is an example key for localhost which must be replaced with a valid one
  webTlsCert: |-
    -----BEGIN CERTIFICATE-----
    MIIDMTCCAhmgAwIBAgIUBuFZ9ENVH3IYkBRxdIj2OnqJSRYwDQYJKoZIhvcNAQEL
    BQAwKDESMBAGA1UEAwwJbG9jYWxob3N0MRIwEAYDVQQKDAlsb2NhbGhvc3QwHhcN
    MjAxMTEyMDkxMDU0WhcNMjExMTEyMDkxMDU0WjAoMRIwEAYDVQQDDAlsb2NhbGhv
    c3QxEjAQBgNVBAoMCWxvY2FsaG9zdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
    AQoCggEBAOGg+x2LoUOGfIrVKXDnMNf8fSqz1srj02D1yFR6i0A6cBf2tPPViFj0
    kAhx1lGWjpUgyGSi/pPzxl1LLQp9cKgrAv0ZIOZCyHp+KWwK/3SYg6B7kEbnCuys
    qwThgfDz9fB2VGx5vhzaoNjlHK0/BFjSyU8e4cOBJtg2yxkBAkKYHo1ZdzfM5y1P
    pyNT1n6p6S/NEWqCybWAndaBsF8Gt8gUokV0jVmnARp0R5O7AXQYIvqQXpTj5fJT
    CcUQqMcnl05PyAU0DHVpjZo1MUqCiMcG0846gv7I+3gCieUDzm0TziTuP145cUfA
    1N1jCTe2Qnly9SDioKQJx07KGi0m6cUCAwEAAaNTMFEwHQYDVR0OBBYEFFAczncq
    M/pnJE2/q+QYCSLBWUeYMB8GA1UdIwQYMBaAFFAczncqM/pnJE2/q+QYCSLBWUeY
    MA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAJdDWIgQ12E3FLfm
    ZH0UC6iSqTOHDArO1P0hSq99nXu5q1nnKyo97UN4cC4KXj5iILw1PWuddID+D/uB
    QSlvlf5hdtpe+ZAHCNJMQoHXU7Z+nfWFcrH+l0+oDqIhAHf8CUPPqA+3HHecZF/5
    TBEeEKQlWqRA28xE2XuUYSqq2KU0y45kmXR7TLxDMQ0+1hXOVxaK5DKgU/raHbkm
    fwUma77ffqul3VBYBVVX2IbP3ItPScFz7dBOqq2jY0OGj24B/DF24T/9a840zzVk
    U12J2brSxoSgaT9q04TeK21y6Dvt0NIOr/G7M/B7EZUGGjO8fpTsOAt5r4FuYVvp
    ePVEHv8=
    -----END CERTIFICATE-----

  webTlsKey: |-
    -----BEGIN PRIVATE KEY-----
    MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDhoPsdi6FDhnyK
    1Slw5zDX/H0qs9bK49Ng9chUeotAOnAX9rTz1YhY9JAIcdZRlo6VIMhkov6T88Zd
    Sy0KfXCoKwL9GSDmQsh6filsCv90mIOge5BG5wrsrKsE4YHw8/XwdlRseb4c2qDY
    5RytPwRY0slPHuHDgSbYNssZAQJCmB6NWXc3zOctT6cjU9Z+qekvzRFqgsm1gJ3W
    gbBfBrfIFKJFdI1ZpwEadEeTuwF0GCL6kF6U4+XyUwnFEKjHJ5dOT8gFNAx1aY2a
    NTFKgojHBtPOOoL+yPt4AonlA85tE84k7j9eOXFHwNTdYwk3tkJ5cvUg4qCkCcdO
    yhotJunFAgMBAAECggEAA2Caga22Y0FfGeDo9uSvCXyhDwOUIoNYhaoILqOK9BIr
    3V/3A3Nd0B8RDN9PWvdK+RZ9iWwbLXHHtVvLt8164zmJmOpIYMn9IEBFNHXRrxgd
    WEihNz58HmDTSoZpoIa2VrwetWT5IItxPu3nCPzZfs7g7otCy99iCnh/f8dRFlgT
    YZ8MySRRqquWiuqrtMuWaQiPtISqnaMEE2nHOOWEEngCrAe3x+EK7QR22XnFjlvr
    qUzDmI6ltQdlKdNoI5xOh4mglpFNLWlN3YD4uU4nnC5SlL0V589rLDd7Zdxalw65
    dbXPNWC3m90SpWXfgxtpXpXo4Lncz8BorkT+Fzuh3QKBgQD6A+duJwKIo6WiTOOv
    CtaIONMu5KwTKHRm8EiUVoAXVbEvZyEdyzO6AWdFS/kW37V1BNdfhh2g2wFMJ88F
    5tfOypKtfeewqIps82FRF4924mlbqg6XTfNq9p8ccvQtomRi/vw/MTibO8okRAdT
    hwmqLNzm/RJtpWIh6+wpJKH9ZwKBgQDnB6L9RbzZc61bFUX6L2DDtLM7v+94GlJ8
    uWBZLrGxacFbXyM1NPzahgeQQdqy9h7TOCfuRcXwoAjiFzxtHUJwFyOgnDQn8c1P
    ac5WFHL2JNQSWgQWQQ89nal3AvUnVrzadsWotLiN3uajbaSKYFGoN+XJmlsmTvjz
    wfDlwNP38wKBgQCW0TAUhLfEkWNjapqWhyUu+4h5azxaOjctuZku0pdmfCzseXvC
    q0fC1wHjDZdvMvgVZRw+5XqOBE7eD82Us9JPTmf4/FB9gs4uNwrnjhzfDGmeABHZ
    OA604ZzN3pJpzOJdzY+A10Jcck7YXalFu9oarAF93f/14KQ37keB8jU91QKBgBmC
    GljkjklkIEviOWu6N3DkTrXWJ1aXcWwb+6tdIHl6N8Mi6fxB8XkfO06ONttzmUuw
    85e3VHeQ8+oirqVNibxekax2ErwmUojmIcYXU+ohftjX34Olg01GTyO4y+CgDxH/
    8ysBaS8g4U5CGNy+bcWpBlIQHOhJ5+riCvsTI1RJAoGACjIJNfC8oF1ZKZ+XFWJw
    0y40fPPPNNlZbourRID6WBM2z6yH87/igwwg4/QsDPisxJnlDGSgkEaGwfyzMMy9
    v7OGsyhdTLQ87WArV8/jSmeN3mE9UxyhahkFB5BkzINZYgWMf9evbFOuvveQl8Te
    BoF/GvpqCc0qXM8jaa9stkU=
    -----END PRIVATE KEY-----

  ## Secrets for DB access
  ##
  postgresUser:
  postgresPassword:
  postgresCaCert:
  postgresClientCert:
  postgresClientKey: